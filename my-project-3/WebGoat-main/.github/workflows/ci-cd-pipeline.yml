name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  pull_request_review:
    types: [submitted]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'

    - name: Build with Maven
      run: mvn clean install

  security_scans:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run SAST with CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: java
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
      continue-on-error: false

    - name: Run Dependency Check
      uses: actions/checkout@v2
    - name: OWASP Dependency-Check
      uses: jeremylong/gh-dependency-check@v1
      with:
        project: WebGoat
        format: 'ALL'
        outputDirectory: './dependency-check-report'
        scanPath: './'
      continue-on-error: false

    - name: Run Gitleaks
      uses: zricethezav/gitleaks-action@v1.2.0
      with:
        config: ''
      continue-on-error: false

    - name: Run Trivy Container Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'webgoat/webgoat:latest'
      continue-on-error: false

    - name: Upload Scan Reports
      uses: actions/upload-artifact@v2
      with:
        name: scan-reports
        path: |
          ./dependency-check-report
          ./codeql-results
          ./gitleaks-results
          ./trivy-results

  deploy:
    needs: [build, security_scans]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy Front-end
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.FRONTEND_SSH_USER }}@${{ secrets.FRONTEND_SSH_HOST }} 'bash -s' < scripts/deploy_frontend.sh

    - name: Deploy Back-end
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.BACKEND_SSH_USER }}@${{ secrets.BACKEND_SSH_HOST }} 'bash -s' < scripts/deploy_backend.sh